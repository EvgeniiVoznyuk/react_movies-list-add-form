{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/Inputs/Inputs.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","indexOf","Input","name","value","changeHandler","Form","Group","Label","Control","type","placeholder","onChange","required","Inputs","state","Object","entries","NewMovie","imdbId","emptyState","assign","handleChange","event","target","setState","addForm","preventDefault","props","addMovie","onSubmit","this","Button","variant","Component","App","moviesFromServer","prev","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKH,EAAOI,QAAQF,IAAYA,SAgBjDH,EAAWD,aAAe,CACxBE,OAAQ,I,mCCtBGK,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,cAAhB,OACnB,kBAACC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,KAAaL,GACb,kBAACG,EAAA,EAAKG,QAAN,CACEN,KAAMA,EACNO,KAAK,OACLC,YAAaR,EACbC,MAAOA,EACPQ,SAAUP,EACVQ,UAAQ,MCTDC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOV,EAAV,EAAUA,cAAV,OACpBW,OAAOC,QAAQF,GAAOjB,KAAI,mCAAEK,EAAF,KAAQC,EAAR,YACxB,kBAAC,EAAD,CACEJ,IAAKG,EACLA,KAAMA,EACNC,MAAOA,EACPC,cAAeA,Q,QCLRa,EAAb,4MACEH,MAAQ,CACN5B,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACT6B,OAAQ,IANZ,EASEC,WAAaJ,OAAOK,OAAO,EAAKN,OATlC,EAWEO,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBrB,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKqB,SAAL,eAAiBtB,EAAOC,KAb5B,EAgBEsB,QAAU,SAACH,GACTA,EAAMI,iBAEN,EAAKC,MAAMC,SAAX,eAAyB,EAAKd,QAC9B,EAAKU,SAAS,EAAKL,aApBvB,uDAwBI,OACE,kBAACd,EAAA,EAAD,CAAMwB,SAAUC,KAAKL,SACnB,kBAAC,EAAD,CACEX,MAAOgB,KAAKhB,MACZV,cAAe0B,KAAKT,eAGtB,kBAACU,EAAA,EAAD,CACEtB,KAAK,SACLuB,QAAQ,WAFV,kBA/BR,GAA8BC,a,QCEjBC,G,MAAb,4MACEpB,MAAQ,CACNlB,OAAQuC,GAFZ,EAKEP,SAAW,SAAC9B,GACV,EAAK0B,UAAS,SAAAY,GAAI,MAAK,CACrBxC,OAAO,GAAD,mBAAMwC,EAAKxC,QAAX,CAAmBE,SAP/B,uDAWY,IACAF,EAAWkC,KAAKhB,MAAhBlB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUsC,SAAUE,KAAKF,iBApBnC,GAAyBK,cCFzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a08c7065.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movies.indexOf(movie)} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\n\nexport const Input = ({ name, value, changeHandler }) => (\n  <Form.Group>\n    <Form.Label>{name}</Form.Label>\n    <Form.Control\n      name={name}\n      type=\"text\"\n      placeholder={name}\n      value={value}\n      onChange={changeHandler}\n      required\n    />\n  </Form.Group>\n);\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\n\nexport const Inputs = ({ state, changeHandler }) => (\n  Object.entries(state).map(([name, value]) => (\n    <Input\n      key={name}\n      name={name}\n      value={value}\n      changeHandler={changeHandler}\n    />\n  ))\n);\n\nInputs.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string).isRequired,\n  changeHandler: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Inputs } from '../Inputs';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  emptyState = Object.assign(this.state)\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  addForm = (event) => {\n    event.preventDefault();\n\n    this.props.addMovie({ ...this.state })\n    this.setState(this.emptyState)\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.addForm}>\n        <Inputs\n          state={this.state}\n          changeHandler={this.handleChange}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n        >\n          Add Movie\n        </Button>\n      </Form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prev => ({\n      movies: [...prev.movies, movie],\n    }))\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}